{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from \"../user/user.types\";\nimport { clearCart } from \"./cart.actions\"; // Generator function\n// Return a generator object\n// yield - wait until complete, like await\n\nexport function* clearCartSignOut() {\n  yield put(clearCart());\n} // Generator function - return a generator object\n// yield - wait until complete, like await\n// Listen for EMAIL_SIGN_IN_START Action\n// Pass returned Action object from SIGN_OUT_SUCCESS, and call clearCartSignOut Saga\n\nexport function* cleanCartSignOutStart() {\n  // takeLatest - cancel all the generator functions except the last\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartSignOut);\n} // Combine all sagas into one saga\n\nexport function* cartSagas() {\n  yield all([call(cleanCartSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/jacksonyin/Documents/development/E-commerce/client/src/redux/cart/cart.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","clearCart","clearCartSignOut","cleanCartSignOutStart","SIGN_OUT_SUCCESS","cartSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CAIA;AACA;AACA;;AACA,OAAO,UAAUC,gBAAV,GACP;AACI,QAAML,GAAG,CAACI,SAAS,EAAV,CAAT;AACH,C,CAED;AACA;AACA;AACA;;AACA,OAAO,UAAUE,qBAAV,GACP;AACI;AACA,QAAMP,UAAU,CAACI,eAAe,CAACI,gBAAjB,EAAmCF,gBAAnC,CAAhB;AACH,C,CAED;;AACA,OAAO,UAAUG,SAAV,GAAsB;AACzB,QAAMP,GAAG,CAAC,CACNC,IAAI,CAACI,qBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from \"../user/user.types\";\nimport { clearCart } from \"./cart.actions\";\n\n\n\n// Generator function\n// Return a generator object\n// yield - wait until complete, like await\nexport function* clearCartSignOut()\n{\n    yield put(clearCart());\n}\n\n// Generator function - return a generator object\n// yield - wait until complete, like await\n// Listen for EMAIL_SIGN_IN_START Action\n// Pass returned Action object from SIGN_OUT_SUCCESS, and call clearCartSignOut Saga\nexport function* cleanCartSignOutStart()\n{\n    // takeLatest - cancel all the generator functions except the last\n    yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartSignOut);\n}\n\n// Combine all sagas into one saga\nexport function* cartSagas() {\n    yield all([\n        call(cleanCartSignOutStart)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}