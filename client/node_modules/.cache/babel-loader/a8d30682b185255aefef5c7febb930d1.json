{"ast":null,"code":"import { CartActionTypes } from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\"; // Initial state of cart state\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n}; // Return an object\n// currentState - cart object\n// Action - { type: string , payload: any }\n\nconst cartReducer = (currentState = INITIAL_STATE, action) => {\n  const type = action.type;\n\n  if (type === CartActionTypes.TOGGLE_CART_HIDDEN) {\n    return { // The order matters!!!\n      // Spread (Keep) all the properties in cart\n      ...currentState,\n      // Overwrite hidden property\n      hidden: !currentState.hidden\n    };\n  } else if (type === CartActionTypes.ADD_ITEM) {\n    return { // The order matters!!!\n      // Spread (Keep) all the properties in cart\n      ...currentState,\n      // Spread (Keep) all the existing cart items and add the new one\n      cartItems: addItemToCart(currentState.cartItems, action.payload)\n    };\n  } else if (type === CartActionTypes.REMOVE_ITEM) {\n    return { // The order matters!!!\n      // Spread (Keep) all the properties in cart\n      ...currentState,\n      // Spread (Keep) all the existing cart items and decrease the quantity\n      cartItems: removeItemFromCart(currentState.cartItems, action.payload)\n    };\n  } else if (type === CartActionTypes.CLEAR_ITEMS) {\n    return { // The order matters!!!\n      // Spread (Keep) all the properties in cart\n      ...currentState,\n      // Filter out cartItem that was cleared\n      cartItems: currentState.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n    };\n  } else if (type === CartActionTypes.CLEAR_CART) {\n    return { // The order matters!!!\n      // Spread (Keep) all the properties in cart\n      ...currentState,\n      // Clear cartItems\n      cartItems: []\n    };\n  } // Default state\n  else {\n      return currentState;\n    }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/jacksonyin/Documents/development/E-commerce/client/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","currentState","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEMS","filter","cartItem","id","CLEAR_CART"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD,C,CAIA;;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB,C,CAMA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,CAACC,YAAY,GAAGJ,aAAhB,EAA+BK,MAA/B,KAA0C;AAC1D,QAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;;AAEA,MAAIA,IAAI,KAAKT,eAAe,CAACU,kBAA7B,EACA;AACI,WAAO,EACH;AACA;AACA,SAAGH,YAHA;AAIH;AACAH,MAAAA,MAAM,EAAE,CAACG,YAAY,CAACH;AALnB,KAAP;AAOH,GATD,MAUK,IAAIK,IAAI,KAAKT,eAAe,CAACW,QAA7B,EACL;AACI,WAAO,EACH;AACA;AACA,SAAGJ,YAHA;AAIH;AACAF,MAAAA,SAAS,EAAEJ,aAAa,CAACM,YAAY,CAACF,SAAd,EAAyBG,MAAM,CAACI,OAAhC;AALrB,KAAP;AAOH,GATI,MAUA,IAAIH,IAAI,KAAKT,eAAe,CAACa,WAA7B,EACL;AACI,WAAO,EACH;AACA;AACA,SAAGN,YAHA;AAIH;AACAF,MAAAA,SAAS,EAAEH,kBAAkB,CAACK,YAAY,CAACF,SAAd,EAAyBG,MAAM,CAACI,OAAhC;AAL1B,KAAP;AAOH,GATI,MAUA,IAAIH,IAAI,KAAKT,eAAe,CAACc,WAA7B,EACL;AACI,WAAO,EACH;AACA;AACA,SAAGP,YAHA;AAIH;AACAF,MAAAA,SAAS,EAAEE,YAAY,CAACF,SAAb,CAAuBU,MAAvB,CAA8BC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EAAzE;AALR,KAAP;AAOH,GATI,MAUA,IAAIR,IAAI,KAAKT,eAAe,CAACkB,UAA7B,EACL;AACI,WAAO,EACH;AACA;AACA,SAAGX,YAHA;AAIH;AACAF,MAAAA,SAAS,EAAE;AALR,KAAP;AAOH,GATI,CAUL;AAVK,OAWA;AACD,aAAOE,YAAP;AACH;AACJ,CAzDD;;AA6DA,eAAeD,WAAf","sourcesContent":["import { CartActionTypes } from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\n\n\n\n// Initial state of cart state\nconst INITIAL_STATE = {\n    hidden: true,\n    cartItems: []\n};\n\n\n// Return an object\n// currentState - cart object\n// Action - { type: string , payload: any }\nconst cartReducer = (currentState = INITIAL_STATE, action) => {\n    const type = action.type;\n\n    if (type === CartActionTypes.TOGGLE_CART_HIDDEN)\n    {\n        return {\n            // The order matters!!!\n            // Spread (Keep) all the properties in cart\n            ...currentState,\n            // Overwrite hidden property\n            hidden: !currentState.hidden\n        };\n    }\n    else if (type === CartActionTypes.ADD_ITEM)\n    {\n        return {\n            // The order matters!!!\n            // Spread (Keep) all the properties in cart\n            ...currentState,\n            // Spread (Keep) all the existing cart items and add the new one\n            cartItems: addItemToCart(currentState.cartItems, action.payload)\n        };\n    }\n    else if (type === CartActionTypes.REMOVE_ITEM)\n    {\n        return {\n            // The order matters!!!\n            // Spread (Keep) all the properties in cart\n            ...currentState,\n            // Spread (Keep) all the existing cart items and decrease the quantity\n            cartItems: removeItemFromCart(currentState.cartItems, action.payload)\n        };\n    }\n    else if (type === CartActionTypes.CLEAR_ITEMS)\n    {\n        return {\n            // The order matters!!!\n            // Spread (Keep) all the properties in cart\n            ...currentState,\n            // Filter out cartItem that was cleared\n            cartItems: currentState.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n        };\n    }\n    else if (type === CartActionTypes.CLEAR_CART)\n    {\n        return {\n            // The order matters!!!\n            // Spread (Keep) all the properties in cart\n            ...currentState,\n            // Clear cartItems\n            cartItems: []\n        };\n    }\n    // Default state\n    else {\n        return currentState;\n    }\n};\n\n\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}