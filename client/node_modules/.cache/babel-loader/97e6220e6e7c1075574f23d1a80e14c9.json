{"ast":null,"code":"import { createSelector } from 'reselect'; // Caching - Memoization\n// Retrieve cart property from store\n\nconst selectCart = state => state.cart; // Retrieve cartItems from cart\n// Caching - Memoization\n// If state.cart doesn't change, memoize output selector\n\n\nexport const selectCartItems = createSelector( // Input selector\n[selectCart], // Output selector\ncart => cart.cartItems); // Retrieve cartItems from cart\n// Caching - Memoization\n// If state.cart doesn't change, memoize output selector\n\nexport const selectCartHidden = createSelector( // Input selector\n[selectCart], // Output selector\ncart => cart.hidden); // Calculate total number of quantities from cartItems\n// Caching - Memoization\n// If state.cart doesn't change, memoize output selector\n\nexport const selectCartItemsCount = createSelector( // Input selector\n[selectCartItems], // Output selector\ncartItems => cartItems.reduce((totalQuantity, cartItem) => totalQuantity + cartItem.quantity, 0)); // Calculate total price from cartItems\n// Caching - Memoization\n// If state.cart doesn't change, memoize output selector\n\nexport const selectCartItemsTotal = createSelector( // Input selector\n[selectCartItems], // Output selector\ncartItems => cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/jacksonyin/Documents/development/E-commerce/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","totalQuantity","cartItem","quantity","selectCartItemsTotal","total","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAIA;AAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAGA;AACA;AACA;;;AACA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,EACzC;AACA,CAACC,UAAD,CAFyC,EAGzC;AACAE,IAAI,IAAIA,IAAI,CAACE,SAJ4B,CAAtC,C,CAOP;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,EAC1C;AACA,CAACC,UAAD,CAF0C,EAG1C;AACAE,IAAI,IAAIA,IAAI,CAACI,MAJ6B,CAAvC,C,CAQP;AACA;AACA;;AACA,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,EAC9C;AACF,CAACI,eAAD,CAFgD,EAG9C;AACFC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,aAAD,EAAgBC,QAAhB,KAA6BD,aAAa,GAAGC,QAAQ,CAACC,QAAvE,EAAiF,CAAjF,CAJmC,CAA3C,C,CAOP;AACA;AACA;;AACA,OAAO,MAAMC,oBAAoB,GAAGb,cAAc,EAC9C;AACA,CAACI,eAAD,CAF8C,EAG9C;AACAC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACK,KAAD,EAAQH,QAAR,KAAqBG,KAAK,GAAGH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KAA3E,EAAkF,CAAlF,CAJiC,CAA3C","sourcesContent":["import { createSelector } from 'reselect';\n\n\n\n// Caching - Memoization\n\n// Retrieve cart property from store\nconst selectCart = state => state.cart;\n\n\n// Retrieve cartItems from cart\n// Caching - Memoization\n// If state.cart doesn't change, memoize output selector\nexport const selectCartItems = createSelector(\n    // Input selector\n    [selectCart],\n    // Output selector\n    cart => cart.cartItems\n);\n\n// Retrieve cartItems from cart\n// Caching - Memoization\n// If state.cart doesn't change, memoize output selector\nexport const selectCartHidden = createSelector(\n    // Input selector\n    [selectCart],\n    // Output selector\n    cart => cart.hidden\n);\n\n\n// Calculate total number of quantities from cartItems\n// Caching - Memoization\n// If state.cart doesn't change, memoize output selector\nexport const selectCartItemsCount = createSelector(\n    // Input selector\n  [selectCartItems],\n    // Output selector\n  cartItems => cartItems.reduce((totalQuantity, cartItem) => totalQuantity + cartItem.quantity, 0)\n);\n\n// Calculate total price from cartItems\n// Caching - Memoization\n// If state.cart doesn't change, memoize output selector\nexport const selectCartItemsTotal = createSelector(\n    // Input selector\n    [selectCartItems],\n    // Output selector\n    cartItems => cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0)\n);"]},"metadata":{},"sourceType":"module"}