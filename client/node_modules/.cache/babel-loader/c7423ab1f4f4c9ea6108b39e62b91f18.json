{"ast":null,"code":"import { UserActionTypes } from \"./user.types\";\nimport { User } from \"firebase\"; // Initial state of user state\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  errorMessage: null\n}; // Return an object\n// currentState - user object\n// Action - { type: string , payload: any }\n\nconst userReducer = (currentState = INITIAL_STATE, action) => {\n  const type = action.type; // Success\n\n  if (type === UserActionTypes.SIGN_IN_SUCCESS) {\n    return { // The order matters!!!\n      // Spread (Keep) all the properties in user\n      ...currentState,\n      currentUser: action.payload,\n      errorMessage: null\n    };\n  } else if (type === UserActionTypes.SIGN_OUT_SUCCESS) {\n    return { // The order matters!!!\n      // Spread (Keep) all the properties in user\n      ...currentState,\n      currentUser: null,\n      errorMessage: null\n    };\n  } // Failure\n  else if (type === UserActionTypes.SIGN_IN_FAILURE || UserActionTypes.SIGN_OUT_FAILURE || UserActionTypes.SIGN_UP_FAILURE) {\n      return { // The order matters!!!\n        // Spread (Keep) all the properties in user\n        ...currentState,\n        errorMessage: action.payload\n      };\n    } // Default state - the same with currentUser as null\n    else {\n        return currentState;\n      }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/jacksonyin/Documents/development/E-commerce/client/src/redux/user/user.reducer.js"],"names":["UserActionTypes","User","INITIAL_STATE","currentUser","errorMessage","userReducer","currentState","action","type","SIGN_IN_SUCCESS","payload","SIGN_OUT_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_FAILURE","SIGN_UP_FAILURE"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAAQC,IAAR,QAAmB,UAAnB,C,CAIA;;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,IADK;AAElBC,EAAAA,YAAY,EAAE;AAFI,CAAtB,C,CAMA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,CAACC,YAAY,GAAGJ,aAAhB,EAA+BK,MAA/B,KAA0C;AAC1D,QAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB,CAD0D,CAG1D;;AACA,MAAIA,IAAI,KAAKR,eAAe,CAACS,eAA7B,EACA;AACI,WAAO,EACH;AACA;AACA,SAAGH,YAHA;AAIHH,MAAAA,WAAW,EAAEI,MAAM,CAACG,OAJjB;AAKHN,MAAAA,YAAY,EAAE;AALX,KAAP;AAOH,GATD,MAUK,IAAII,IAAI,KAAKR,eAAe,CAACW,gBAA7B,EACL;AACI,WAAO,EACH;AACA;AACA,SAAGL,YAHA;AAIHH,MAAAA,WAAW,EAAE,IAJV;AAKHC,MAAAA,YAAY,EAAE;AALX,KAAP;AAOH,GATI,CAUL;AAVK,OAWA,IAAII,IAAI,KAAKR,eAAe,CAACY,eAAzB,IACSZ,eAAe,CAACa,gBADzB,IAESb,eAAe,CAACc,eAF7B,EAGL;AACI,aAAO,EACH;AACA;AACA,WAAGR,YAHA;AAIHF,QAAAA,YAAY,EAAEG,MAAM,CAACG;AAJlB,OAAP;AAMH,KAVI,CAWL;AAXK,SAYA;AACD,eAAOJ,YAAP;AACH;AACJ,CAxCD;;AA4CA,eAAeD,WAAf","sourcesContent":["import { UserActionTypes } from \"./user.types\";\nimport {User} from \"firebase\";\n\n\n\n// Initial state of user state\nconst INITIAL_STATE = {\n    currentUser: null,\n    errorMessage: null\n};\n\n\n// Return an object\n// currentState - user object\n// Action - { type: string , payload: any }\nconst userReducer = (currentState = INITIAL_STATE, action) => {\n    const type = action.type;\n\n    // Success\n    if (type === UserActionTypes.SIGN_IN_SUCCESS)\n    {\n        return {\n            // The order matters!!!\n            // Spread (Keep) all the properties in user\n            ...currentState,\n            currentUser: action.payload,\n            errorMessage: null\n        };\n    }\n    else if (type === UserActionTypes.SIGN_OUT_SUCCESS)\n    {\n        return {\n            // The order matters!!!\n            // Spread (Keep) all the properties in user\n            ...currentState,\n            currentUser: null,\n            errorMessage: null\n        };\n    }\n    // Failure\n    else if (type === UserActionTypes.SIGN_IN_FAILURE ||\n                      UserActionTypes.SIGN_OUT_FAILURE ||\n                      UserActionTypes.SIGN_UP_FAILURE)\n    {\n        return {\n            // The order matters!!!\n            // Spread (Keep) all the properties in user\n            ...currentState,\n            errorMessage: action.payload\n        };\n    }\n    // Default state - the same with currentUser as null\n    else {\n        return currentState;\n    }\n};\n\n\n\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}