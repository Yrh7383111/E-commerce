{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonyin/Documents/development/E-commerce/client/src/components/cart-icon /cart-icon.component.jsx\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\nimport { CartIconContainer, ItemCountContainer, ShoppingIconContainer } from \"./cart-icon.styles\"; // Cart Icon component\n// Object destructing\n// this.props -> { toggleCartHidden, itemCount }\n\nconst CartIcon = () => {\n  // Retrieve props from store\n  // Caching - Memoization on Cart Icon component\n  // If state.cart doesn't change, memoize itemCount\n  const itemCount = useSelector(selectCartItemsCount); // Dispatch Actions to all Reducers\n  // dispatch - packs up the argument as an Action object, and deliveries it to all Reducers\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(CartIconContainer, {\n    onClick: () => dispatch(toggleCartHidden()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingIconContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ItemCountContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, itemCount));\n};\n\nexport default CartIcon;","map":{"version":3,"sources":["/Users/jacksonyin/Documents/development/E-commerce/client/src/components/cart-icon /cart-icon.component.jsx"],"names":["React","useSelector","useDispatch","createStructuredSelector","toggleCartHidden","selectCartItemsCount","CartIconContainer","ItemCountContainer","ShoppingIconContainer","CartIcon","itemCount","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,EAAgDC,qBAAhD,QAA6E,oBAA7E,C,CAIA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACnB;AACA;AACA;AACA,QAAMC,SAAS,GAAGT,WAAW,CAACI,oBAAD,CAA7B,CAJmB,CAMnB;AACA;;AACA,QAAMM,QAAQ,GAAGT,WAAW,EAA5B;AAGA,sBACI,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAE,MAAMS,QAAQ,CAACP,gBAAgB,EAAjB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBM,SAArB,CAFJ,CADJ;AAMH,CAjBD;;AAoBA,eAAeD,QAAf","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createStructuredSelector } from \"reselect\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\nimport { CartIconContainer, ItemCountContainer, ShoppingIconContainer } from \"./cart-icon.styles\";\n\n\n\n// Cart Icon component\n// Object destructing\n// this.props -> { toggleCartHidden, itemCount }\nconst CartIcon = () => {\n    // Retrieve props from store\n    // Caching - Memoization on Cart Icon component\n    // If state.cart doesn't change, memoize itemCount\n    const itemCount = useSelector(selectCartItemsCount);\n\n    // Dispatch Actions to all Reducers\n    // dispatch - packs up the argument as an Action object, and deliveries it to all Reducers\n    const dispatch = useDispatch();\n\n\n    return (\n        <CartIconContainer onClick={() => dispatch(toggleCartHidden())}>\n            <ShoppingIconContainer />\n            <ItemCountContainer>{itemCount}</ItemCountContainer>\n        </CartIconContainer>\n    );\n};\n\n\nexport default CartIcon;"]},"metadata":{},"sourceType":"module"}