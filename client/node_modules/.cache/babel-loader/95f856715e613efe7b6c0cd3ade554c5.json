{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"./root-saga\"; // Saga middleware for Action object after reducer\n\nconst sagaMiddleware = createSagaMiddleware(); // Middleware between Action and Reducer\n// thunk - catch function\n\nconst middlewares = [sagaMiddleware];\nif (process.env.NODE_ENV === 'development') middlewares.push(logger); // Store object which holds all the states\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // Run root saga middleware\n\nsagaMiddleware.run(rootSaga); // Redux browser Local Storage\n\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/jacksonyin/Documents/development/E-commerce/client/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","rootReducer","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CAIA;;AACA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C,C,CAEA;AACA;;AACA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EACIH,WAAW,CAACI,IAAZ,CAAiBV,MAAjB,E,CAEJ;;AACA,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CAEP;;AACAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB,E,CAEA;;AACA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"./root-saga\";\n\n\n\n// Saga middleware for Action object after reducer\nconst sagaMiddleware = createSagaMiddleware();\n\n// Middleware between Action and Reducer\n// thunk - catch function\nconst middlewares = [sagaMiddleware];\nif (process.env.NODE_ENV === 'development')\n    middlewares.push(logger);\n\n// Store object which holds all the states\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// Run root saga middleware\nsagaMiddleware.run(rootSaga);\n\n// Redux browser Local Storage\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}